apply plugin: 'com.android.application'

// 获取keystore相关参数
def storeParam = { key ->
    Properties localProperties = new Properties()
    localProperties.load(file('../local.properties').newDataInputStream())
    Properties keystoreParam = new Properties();
    keystoreParam.load(file(localProperties['keystore.properties']).newDataInputStream())
    keystoreParam[key]
}

// for version code
def tmpVerCodeByGit = {
    def versionNumberCmd = 'git rev-list HEAD --count'
    versionNumberCmd.execute().text.trim().toInteger()
}
// for version name
def tmpVerNameByGit = {
    def revisionDescriptionCMD = 'git describe'
    revisionDescriptionCMD.execute().text.trim()
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'
    defaultConfig {
        applicationId "cn.cj.media.video.player"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {

        }
        release {
            storeFile file(storeParam('storeFile'))
            keyAlias storeParam('keyAlias')
            keyPassword storeParam('keyPassword')
            storePassword storeParam('keyPassword')
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            if (variant.buildType.name.equals('release')) {
                def s = tmpVerNameByGit().substring(1)  // remove first char 'v' of tag 'v1.0-2-afafaf'
                def a = s.split("-") // split it with '-'
                def v = a[0] + '.' + a[1] + '.' + a[2] // concatenate them for versionName
                println("getVersionCode:" + tmpVerCodeByGit() + ", versionName:" + v)
                variant.mergedFlavor.versionCode = tmpVerCodeByGit()
                variant.mergedFlavor.versionName = v

                // rename apk file
                def file = variant.outputs[0].outputFile // 低版本的gradle可能为variant.outputFile
                variant.outputs[0].outputFile = new File(file.parent, file.name.replace('-release.apk', "-" + v + ".apk"))
            }
        }

    }

    productFlavors {

    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
}